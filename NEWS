Upcoming release:

* The "charm_crd" structure was replaced by new structures:

    * "charm_point" and
    * "charm_cell",

  which distinguish between evaluation points and evaluation cells.

* Functions:

    * "charm_shc_init",
    * "charm_crd_init",
    * "charm_leg_pnmj_init"

  were replaced by

    * "charm_shc_calloc",
    * "charm_crd_calloc",
    * "charm_leg_pnmj_calloc".

  The new functions behave in the same fashion as the old ones, including their 
  interface.

  The following functions have been added:

    * "charm_shc_malloc",
    * "charm_crd_malloc",
    * "charm_leg_pnmj_malloc",

  which behave similarly as their "*_calloc" counterparts, but provide 
  uninitialized memory.

  Functions:

    * "charm_shc_init",
    * "charm_crd_init"

  have now a different meaning.  They can be used to create the respective 
  structures from data arrays provided by the user.

* Changed API of the following functions to read/write spherical harmonic 
  coefficients from/to files:

    * "charm_shc_read_bin",
    * "charm_shc_read_gfc",
    * "charm_shc_read_mtx",
    * "charm_shc_read_tbl",
    * "charm_shc_write_bin",
    * "charm_shc_write_mtx",
    * "charm_shc_write_tbl".

  Previously, it was necessary to open the stream for the input/output file, 
  call the CHarm function to read/write the coefficients and, finally, close 
  the stream.  All these steps had to be done by the user.  Now, the user only 
  calls the function to read/write the coefficients and specifies the file's 
  path name as one of the input parameters.  Opening and closing the stream is 
  done by CHarm.

  This should considerably simplify making the Python wrapper, given than 
  wrapping "TYPE *" pointer with "ctypes" is not that trivial.

* Changed API for SHA and SHS with cells

    * "charm_sha_cell",
    * "charm_shs_cell",
    * "charm_shs_isurf".

  Cell latitude boundaries must now follow the rule:

    * the "lat[2 * i]" member of "charm_crd" now represents the maximum cell 
      latitude instead of the minimum latitude,
    * the "lat[2 * i + 1]" member of "charm_crd" now represents the minimum
      cell latitude instead of the maximum latitude.

  Area-mean grids are therefore no longer turned upside down.

* The "nmj_order" member of "charm_pnmj" was renamed to "ordering".  This 
  affects the API.

* Bug fix for "integ_pn1m1pn2m2".  The routine now works correctly with both 
  ordering schemes of Fourier coefficients of Legendre functions.

* Fix a few leg_pnmj tests that did not actually run.

* Two members, "nc" and "ns", were added to the "charm_shc" structure to 
  represent the total number of spherical harmonic coefficients "Cnm" and 
  "Snm", respectively.  This does not break the previous API.

* Added support for Fortran's "D" and "d" decimal exponents when reading from 
  text files.

CHarm 0.1.2:

* Bug fix for incorrectly included c-file instead of its respective header file 
  in "integ_cc.c".  The bug was introduced in CHarm 0.1.0.

CHarm 0.1.1:

* A few typo fixes in docs on installing.

CHarm 0.1.0:

* Added support for AVX, AVX2 and AVX-512 vector CPU instructions.

* Bug fix in synthesis of point/mean values at grids having only a single 
  point/cell in the longitudinal direction ("shs_point_grd.c", 
  "shs_cell_grd.c").  The same bug fix applies to the analysis of area-mean 
  values ("sha_cell.c") and the synthesis of area-mean values on irregular 
  surfaces ("shs_cell_isurf.c").  Each of the routines returned an error before 
  the computation could start.

* Removed some functions from API that bring little added value to the users 
  ("charm_misc_is_nearly_equal", "charm_misc_arr_min", "charm_misc_arr_max", 
  "charm_misc_arr_mean", "charm_misc_arr_std", "charm_misc_arr_rms", 
  "charm_misc_arr_chck_lin_incr" and "charm_misc_arr_chck_symm").

CHarm 0.0.1:

* Fixed data-sharing bug in "shs_cell_isurf_coeffs.c".

CHarm 0.0.0:

* Initial release
